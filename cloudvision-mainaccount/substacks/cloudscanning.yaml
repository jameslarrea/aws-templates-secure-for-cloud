AWSTemplateFormatVersion: "2010-09-09"
Description: Cloud Scanning for AWS

Parameters:
  LogRetention:
    Type: Number
    Default: 5
    Description: Days to keep logs from CloudScanning
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC where the workload is deployed
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets where the CloudScanning will be deployed
  ECSCluster:
    Type: String
    Description: ECS Fargate Cluster where deploy the CloudScanning workload
  SysdigSecureEndpointSsm:
    Type: AWS::SSM::Parameter::Name
    Description: "Name of the parameter in SSM containing the Sysdig Secure Endpoint URL"
  SysdigSecureAPITokenSsm:
    Type: AWS::SSM::Parameter::Name
    Description: "Name of the parameter in SSM containing the Sysdig Secure API Token"
  VerifySSL:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"
  ECRDeployed:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
  ECSDeployed:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
  NamingPrefix:
    Type: String
    Default: "SysdigCloud"
    Description: Prefix for resource names. Use the default unless you need to install multiple instances, and modify the deployment at the main account accordingly
    MinLength: 1
    MaxLength: 64
    AllowedPattern : "^[a-zA-Z0-9\\-]+$"
    ConstraintDescription: Must enter a naming prefix up to 64 alphanumeric characters
  AccountsAndRegionsList:
    Type: CommaDelimitedList
    Default: ""
    Description: "A comma separated list of child AWS accounts and regions. Format: account1:region1,account2:region2,..."


Conditions:
  VerifySSL: !Equals [!Ref VerifySSL, "Yes"]
  ECRDeployed: !Equals [!Ref ECRDeployed, "Yes"]
  ECSDeployed: !Equals [!Ref ECSDeployed, "Yes"]
  SingleAccount: !Equals [ !Join [",", !Ref AccountsAndRegionsList], ""]

Resources:
  CodeBuild:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./cloudscanning-codebuild.yaml
      Parameters:
        SysdigSecureEndpointSsm: !Ref SysdigSecureEndpointSsm
        SysdigSecureAPITokenSsm: !Ref SysdigSecureAPITokenSsm
        VerifySSL: !Ref VerifySSL
        NamingPrefix: !Ref NamingPrefix

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${NamingPrefix}-CloudScanning"
      RetentionInDays: !Ref LogRetention

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${NamingPrefix}-CloudScanningTaskRole"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: CodeBuildScanExecutor
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                Resource:
                  Fn::Sub:
                    - "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${BuildProject}"
                    - BuildProject: !GetAtt [ "CodeBuild", "Outputs.BuildProject" ]
        - !If
          - SingleAccount
          - PolicyName: CloudTrailIngestor
            PolicyDocument:
              Statement:
              - Effect: Allow
                Action:
                  - "s3:Get*"
                  - "s3:List*"
                  - "s3:Put*"
                  - "s3:Head*"
                  - 'sqs:DeleteMessage'
                  - 'sqs:DeleteMessageBatch'
                  - 'sqs:ReceiveMessage'
                Resource: '*'
          - !Ref AWS::NoValue
        - !If
          - SingleAccount
          - PolicyName: TaskDefinitionReader
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "ecs:DescribeTaskDefinition"
                  Resource:
                    - "*"
          - !Ref AWS::NoValue
        - !If
          - SingleAccount
          - PolicyName: SecretsReader
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "kms:Decrypt"
                    - "secretsmanager:GetSecretValue"
                  Resource:
                    - "*"
          - !Ref AWS::NoValue
        - !If
          - SingleAccount
          - PolicyName: ECRReader
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "ecr:GetAuthorizationToken"
                    - "ecr:BatchCheckLayerAvailability"
                    - "ecr:GetDownloadUrlForLayer"
                    - "ecr:GetRepositoryPolicy"
                    - "ecr:DescribeRepositories"
                    - "ecr:ListImages"
                    - "ecr:DescribeImages"
                    - "ecr:BatchGetImage"
                    - "ecr:GetLifecyclePolicy"
                    - "ecr:GetLifecyclePolicyPreview"
                    - "ecr:ListTagsForResource"
                    - "ecr:DescribeImageScanFindings"
                  Resource: "*"
          - !Ref AWS::NoValue
        - !If
          - SingleAccount
          - !Ref AWS::NoValue
          - PolicyName: AssumeRole
            PolicyDocument:
              Statement:
              - Effect: Allow
                Action:
                  - "sts:AssumeRole"
                Resource: !Sub "arn:aws:iam::*:role/${NamingPrefix}-CloudScanningRole"

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: ExecutionRolePolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: '*'
        - PolicyName: TaskReadParameters
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "ssm:GetParameters"
              Resource:
                - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SysdigSecureEndpointSsm}
                - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SysdigSecureAPITokenSsm}

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      Family: !Sub "${NamingPrefix}-CloudScanning"
      NetworkMode: awsvpc
      TaskRoleArn: !Ref TaskRole
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      Cpu: "256"
      Memory: "512"
      ContainerDefinitions:
        - Name: CloudScanning
          Environment:
            - Name: VERIFY_SSL
              Value: !If [ VerifySSL, "true", "false" ]
            - Name: SQS_QUEUE_INTERVAL
              Value: 30s
            - Name: CODEBUILD_PROJECT
              Value: !GetAtt [ "CodeBuild", "Outputs.BuildProject" ]
            - Name: ECR_DEPLOYED
              Value: !If [ ECRDeployed, "true", "false" ]
            - Name: ECS_DEPLOYED
              Value: !If [ ECSDeployed, "true", "false" ]
            - Name: TELEMETRY_DEPLOYMENT_METHOD
              Value: cft
            - !If
              - SingleAccount
              - Name: SQS_QUEUE_URL
                Value: !If [ SingleAccount, !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${NamingPrefix}-CloudScanning", "" ]
              - !Ref AWS::NoValue
            - !If
              - SingleAccount
              - !Ref AWS::NoValue
              - Name: SQS_QUEUE_NAME
                Value: !Sub "${NamingPrefix}-CloudScanning"
            - !If
              - SingleAccount
              - !Ref AWS::NoValue
              - Name: ACCOUNTS_AND_REGIONS
                Value: !Join [",", !Ref AccountsAndRegionsList]
            - !If
              - SingleAccount
              - !Ref AWS::NoValue
              - Name: ACCOUNT_ROLE
                Value: !Sub "${NamingPrefix}-CloudScanningRole"
          Secrets:
            - Name: SECURE_URL
              ValueFrom: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SysdigSecureEndpointSsm}
            - Name: SECURE_API_TOKEN
              ValueFrom: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SysdigSecureAPITokenSsm}
          Image: sysdiglabs/cloud-scanning:airadier-test
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: "ecs"

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupName: !Sub "${NamingPrefix}-CloudScanning"
      GroupDescription: CloudScanning workload Security Group
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: !Sub "${NamingPrefix}-CloudScanning"

  CloudScanningService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${NamingPrefix}-CloudScanning"
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref SecurityGroup
          Subnets: !Ref Subnets
      TaskDefinition: !Ref TaskDefinition
