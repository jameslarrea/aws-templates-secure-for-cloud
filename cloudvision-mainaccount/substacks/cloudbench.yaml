AWSTemplateFormatVersion: "2010-09-09"
Description: Cloud Bench for AWS

Parameters:
  CloudBenchLogRetention:
    Type: Number
    Default: 5
    Description: Days to keep logs from CloudBench
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC where the workload is deployed
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets where the CloudBench will be deployed
  ECSCluster:
    Type: String
    Description: ECS Fargate Cluster where deploy the CloudBench workload
  SysdigSecureEndpointSsm:
    Type: AWS::SSM::Parameter::Name
    Description: "Name of the parameter in SSM containing the Sysdig Secure Endpoint URL"
  SysdigSecureAPITokenSsm:
    Type: AWS::SSM::Parameter::Name
    Description: "Name of the parameter in SSM containing the Sysdig Secure API Token"
  S3ConfigBucket:
    Type: String
    Description: Name of a bucket (must exist) where the configuration YAML files will be stored
  VerifySSL:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"
  NamingPrefix:
    Type: String
    Default: "SysdigCloud"
    Description: Prefix for resource names. Use the default unless you need to install multiple instances, and modify the deployment at the main account accordingly
    MinLength: 1
    MaxLength: 64
    AllowedPattern : "^[a-zA-Z0-9\\-]+$"
    ConstraintDescription: Must enter a naming prefix up to 32 alphanumeric characters
  AccountsAndRegionsList:
    Type: CommaDelimitedList
    Default: ""
    Description: "A comma separated list of child AWS accounts and regions. Format: account1:region1,account2:region2,..."

Conditions:
  VerifySSL: !Equals [!Ref VerifySSL, "Yes"]

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${NamingPrefix}-CloudBench"
      RetentionInDays: !Ref CloudBenchLogRetention

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${NamingPrefix}-CloudBenchTaskRole"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ecs-tasks.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Path: /
      Policies:
        - PolicyName: AssumeRole
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "sts:AssumeRole"
              Resource: !Sub "arn:aws:iam::*:role/${NamingPrefix}-CloudBenchRole"
        - PolicyName: ConfigBucketAccess
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "s3:ListBucket"
              Resource: !Sub "arn:${AWS::Partition}:s3:::${S3ConfigBucket}"
            - Effect: Allow
              Action:
                - "s3:GetObject"
                - "s3:PutObject"
              Resource: !Sub "arn:${AWS::Partition}:s3:::${S3ConfigBucket}/*"

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ ecs-tasks.amazonaws.com ]
          Action: [ 'sts:AssumeRole' ]
      Path: /
      Policies:
        - PolicyName: ExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
        - PolicyName: TaskReadParameters
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "ssm:GetParameters"
              Resource:
                - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SysdigSecureEndpointSsm}
                - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SysdigSecureAPITokenSsm}

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      Family: !Sub "${NamingPrefix}-CloudBench"
      NetworkMode: awsvpc
      TaskRoleArn: !Ref TaskRole
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      Cpu: "256"
      Memory: "512"
      Volumes:
        - Name: config
          Host: { }
      ContainerDefinitions:
        - Name: Config
          Environment:
            - Name: BUCKET
              Value: !Ref S3ConfigBucket
            - Name: KEY
              Value: cloud-bench.yaml
            - Name: OUTPUT
              Value: /etc/cloud-bench/cloud-bench.yaml
            - Name: CONFIG
              Value:
                Fn::Base64:
                  Fn::Sub:
                  - |
                    secureURL: "value overriden by SECURE_URL env var"
                    logLevel: "debug"
                    schedule: "24h"
                    benchmarkType: "aws"
                    outputDir: "/tmp/cloud-custodian"
                    policyFile: "/home/custodian/aws-benchmarks.yml"
                    accountsAndRegions: "${AccountsAndRegionsList}"
                    accountRole: ${NamingPrefix}-CloudBenchRole
                  - AccountsAndRegionsList: !Join [",", !Ref AccountsAndRegionsList]
                    NamingPrefix: !Ref NamingPrefix
          Image: sysdiglabs/cloud-connector-s3-bucket-config:latest
          Essential: false
          MountPoints:
            - SourceVolume: config
              ContainerPath: "/etc/cloud-bench"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: "ecs"
        - Name: CloudBench
          Environment:
            - Name: VERIFY_SSL
              Value: !If [ VerifySSL, "true", "false" ]
          DependsOn:
            - ContainerName: Config
              Condition: SUCCESS
          Secrets:
            - Name: SECURE_URL
              ValueFrom: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SysdigSecureEndpointSsm}
            - Name: SECURE_API_TOKEN
              ValueFrom: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SysdigSecureAPITokenSsm}
          Image: sysdiglabs/cloud-bench:latest
          Essential: true
          PortMappings:
            - ContainerPort: 7000
          MountPoints:
            - SourceVolume: config
              ContainerPath: "/etc/cloud-bench"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: "ecs"

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupName: !Sub "${NamingPrefix}-CloudBench"
      GroupDescription: CloudBench workload Security Group
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: !Sub "${NamingPrefix}-CloudBench"

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${NamingPrefix}-CloudBench"
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref SecurityGroup
          Subnets: !Ref Subnets
      TaskDefinition: !Ref TaskDefinition
